/* -*- csharp -*-
 * @brief Remote SASL administration API for mod-sasl.
 */ 
xml-rpc interface sasl-radmin {
	/**
	 * @brief List of allowed resources.
	 */
	allowed resources "sasl-radmin";

	/**
	 * @brief Structure used to represent a user installed on the
	 * database.
	 */
	struct SaslUser {
		/**
		 * @brief The user installed in the database
		 * (according to the kind of request).
		 */
		string auth_id;
		/**
		 * @brief If the user is disabled (no login can be
		 * done with this user).
		 */
		bool   disabled;
	}

	/**
	 * @brief Array of users.
	 */
	array SaslUserArray of SaslUser;

	/** 
	 * @brief Allows to get the set of users created on current
	 * channel created. The channel created defines the serverName
	 * associated which configures the user domain.
	 * 
	 * 
	 * @return A list of users associated to the domain requested
	 * (serverName).
	 */
	[resource="sasl-radmin"];
	SaslUserArray get_users () {
		axlList          * list;
		SaslUserArray    * users;
		SaslUser         * user;
		
		/* get the serverName */
		const char       * serverName = SERVER_NAME_FROM_CHANNEL(channel);
		
		/* get the user list associated to the current serverName */
		list     = common_sasl_get_users (sasl_backend, serverName, &sasl_xml_db_mutex);
		users    = sasl_radmin_sasluserarray_new (axl_list_length (list));
		while (axl_list_length (list) > 0) {
			/* get a user */
			user = axl_list_get_first (list);
			
			/* store in the array */
			sasl_radmin_sasluserarray_add (users, user);
			
			/* unlink from the list */
			axl_list_unlink_first (list);
			
		} /* end list */
		axl_list_free (list);
		
		/* not implemented yet */
		return users;
	} options {
		include on body "get-users-include.c";
	}
	
} /* end sasl-radmin */
