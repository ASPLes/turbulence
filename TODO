FRANCIS WORK

* Add a test to check that mod-python breaks nicely when a python
  app fails to start (it should not break).

* Keep on working on turbulence mediator module to provide a low
  coupling interface to connect modules and API that are unknown to
  each other.

    - Add regression test to check its function. 

    - Use this to implement mod-radmin allowing other modules to
      install its commands.

    - Add support to Libaxl to provide a way to dynamically extend a
      DTD definition allowing to include an piece of XML inside a
      document already validated with an DTD. Use this to include
      attributes an entire xml sections to implement the next point.

    - Use this to allow turbulence to check SASL users at
      turbulence.conf without being linked to mod-sasl.
    
    - Keep on working on tbc-ctl (check to reenable console
      stdout) and mod-radmin (adding more commands to manage and check
      turbulence state).

* Complete turbulence reload signal to reload configuration file
  and limits associated. In the case a definition doesn't exit, kill
  all childs that shouldn't be running.

IDEAS & USEFUL HINTS

* It would be great to allow turbulence configuring which kind of
  frame types are expected to be received for each particular
  profile. This will save people from checking if they have received
  an allowed frame type.

* Investigate how useful would be signalling turbulence/vortex engine
  to do automatic empty replies in the case the frame received do not
  do this.

WANT TO COLLABORATE: PICK ONE! 

* Add support to turbulence/vortex to implement bandwidth at context
  level, connection level and channel level, allowing to control how
  many bytes can be sent or many bytes can be sent by a group of items.
  Link this concept with profile paths.

* Make mod-sasl to support more SASL profiles. Note: CRAM-MD5 and 
  DIGEST-MD5 are deprecated and forces to store passwords in plaintext. 
  It is better to avoid them.

* Add support for lua (lua language) like mod-python so lua can be used
  as first class language to write turbulence applications..

* Add support for php like mod-python so php can be used as first class 
  language to write turbulence applications...
