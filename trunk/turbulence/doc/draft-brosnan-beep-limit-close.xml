<?xml version='1.0'?>
<!DOCTYPE rfc SYSTEM 'rfc2629.dtd'>

<?rfc comments='yes'?>
<?rfc inline='no'?>
<?rfc compact='yes'?>
<?rfc editing='no'?>
<?rfc header='BEEP close limit'?>
<?rfc private='Limiting BEEP session close phase'?>
<?rfc subcompact='no'?>
<?rfc toc='yes'?>
<?rfc tocappendix='yes'?>
<?rfc tocindent='yes'?>

<rfc ipr="none" docName="draft-brosnan-beep-limit-close">
<front>
<title>Limiting BEEP close and reply time </title>

<author initials='F.B.B.' surname='Brosnan Blázquez' fullname='Francis Brosnan Blázquez'>
<organization >Advanced Software Production Line, S.L.</organization>

<address>
<postal>
<street>C/ Antonio Suarez Nº10, Edificio Alius A, Despacho 102</street>
<city>Alcalá de Henares</city> <region>Madrid</region> <code>28802</code>
<country>Madrid</country>
</postal>

<phone>00 34 91 134 14 22</phone>
<email>francis@aspl.es</email>
<uri>http://www.aspl.es</uri>
</address>
</author>

<date month='March' year='2009' />

<abstract>

<t>This document describes two features for the BEEP protocol to allow
peers to negotiate and control reply time limit for a channel and to
enable a BEEP peer to not require all replies to be received to
proceed with channel or session close.</t>

</abstract>

</front>

<middle>
<section title='Security motivation'>

<t>Experience with BEEP development shows that its session close
(described at RFC 3080, section 2.3.1.3) provides many interesting
features, not found in other protocols, like:</t>

<list style="numbers">
<t>Providing a way to ensure all content is flushed in both directions, for all channels, before closing the session.</t>
<t>The hability to deny a channel or session close, for both peers.</t>
</list>

<t>However, these features may be used by malicious software to setup
a DOS attack based on connecting and then blocking replies causing a
BEEP listener to not be able to close a session unless it closes the
transport layer (and even in that case, it is not a complete solution).</t>

<t>This document identifies these points and provides two features
that allows a BEEP peer to ask or advise it will implement a reply
limit and a no reply check during the BEEP session.</t>

</section>

<section title='Points were a BEEP session may be blocked'>

<t>The list of blocking points that may be used to lock a BEEP session
is:</t>

<list style="numbers">
<t>To not reply to a channel start request. Though this may not be a
big deal in request/response escenarios where a listener is the only
party that may block a channel start request, this problem becomes
more apparent when BEEP is used in a full peer to peer environment
where not only the listener but the initiator accepts channels to be
started. 

Additionally, not replying to a start request causes all subsequent
start or close request to be not handled until previous reply is
sent.</t>

<t>To not reply to messages received (MSG). In BEEP, any message
received (MSG) must be replied (RPY, ERR, ANS..NUL). Not replying
causes the remote BEEP peer to "understand" there are pending replies,
making impossible to close a BEEP session until these replies are
received. In general there are no restriction in BEEP to require a
reply to every MSG received. It is only required at the close session
because all replies (in both directions) must be received so the close
process can continue.</t>

<t>To not reply to channel or session close request. Due to BEEP
definition, any peer may reply at any time to a channel or session
close request. That is, a BEEP peer have no time limit imposed to
reply (with a negative or afirmative value) to such close
request. </t>

</list>

<t>In the following sections are presented two features and how they
are used to solve problems presented.</t>

</section>

<section title='Features proposed'>

<t>This document proposes the following two features:</t>

<list style="numbers">
<t>reply-limit: This feature controls, in seconds, how long a reply
can be delayed until a BEEP peer considers a protocol violation so he
can close the session.</t>

<t>no-reply: This feature controls if a BEEP peer will wait for
pending replies. The idea is to allows system administrators that </t>
</list>

<section anchor="greetings_exchange" title='Imposing limits to remote BEEP replies: "reply-limit"'>

<t>A BEEP peer may use "reply-limit" feature to limit allowed time
under which a reply on a particular channel must take place to avoid a
protocol violation. </t>

<t>This is specially useful for channel 0, the BEEP session management
channel, to ensure BEEP peers are bounded to a time limit to reply to
channel start and channel close requests.</t>

<t>To enable "reply-limit" feature a BEEP peer must acknoledge it on
session greetings phase as follow: </t>

<figure anchor="reply_limit_negotiation_phase">
  <artwork>
   L: &lt;wait for incoming connection>
   I: &lt;open connection>
   L: RPY 0 0 . 0 145
   L: Content-Type: application/beep+xml
   L:
   L: &lt;greeting features="reply-limit=10 no-reply">
   L:    &lt;profile uri="http://iana.org/beep/TLS" />
   L: &lt;/greeting>
   L: END
   I: RPY 0 0 . 0 78
   I: Content-Type: application/beep+xml
   I:
   I: &lt;greeting features="reply-limit=10" />
   I: END
  </artwork>
</figure>

<t>A BEEP peer acting in the listener role (L:) receives a connection and
sends along with all profiles supported and other features, the
"reply-limit" feature with the maximum limit allowed in seconds to
reply on channel 0.</t>

<t>In this case, the BEEP peer acting as listener sent the following
relevant information from previous example:</t>

<artwork>
  L: &lt;greeting features="reply-limit=10 no-reply">
</artwork>

<t>The example also shows to it is advised no-reply feature
support. This is later used to explain "no-reply" feature.</t>

<t>Requesting "reply-limit" feature on greetings have two purposes:</t>

<list style="numbers">
<t>To ask remote BEEP peer to acknoledge its support for "reply-limit" feature...</t>

<t>...and to provide the "reply-limit" for channel 0 which is
implicitly created during BEEP session setup. Since "reply-limit" is
activated on channel start, it is required to provide this initial
value in the case channel 0 must be configured.</t>

</list>

<t>A BEEP peer asking for "reply-limit" support that receives a
greetings reply without such feature MAY close the connection (and
should log a diagnostic error). </t>

<section title='Disabling "reply-limit" on channel 0'>
</section>

<t>If the listener does not want to impose a reply limit on channel 0,
but needs reply limit support for other profiles it must just
acknoledge "reply-limit" feature without any time configuration as follows:</t>

<artwork>
  L: &lt;greeting features="reply-limit">
</artwork>

<section title='Activating "reply-limit" feature for user channels'>

<t>Once both BEEP peers have acknoledge its support for "reply-limit"
any peer MAY request a channel start with a reply limit doing as
follow:</t>

<artwork><![CDATA[
  I: MSG 0 1 . 78 130
  I: Content-Type: application/beep+xml
  I:
  I: <start number="1" reply-limit="5">
  I:    <profile uri="urn:aspl.es:profiles:example"/>
  I: </start>
]]></artwork>

<t>A BEEP peer receiving a channel start request with a "reply-limit"
configuration must accept or deny channel creation accepting such limit. </t>

<t>In the case the profile can be served but not ensure "reply-limit"
asked then the BEEP peer receving the request must deny channel start
reporting such error: </t>

<artwork><![CDATA[
  L: ERR 0 1 . 136 132
  L: Content-Type: application/beep+xml
  L:
  L: <error code="554">Unable to provide resource requested with
     "reply-limit" configured</error>
  L: END
]]></artwork>

</section>

<section title='Measures for "reply-limit" exceeded'>

<t>In the case any opened channel with a "reply-limit" configured that
has exceeded reply time limit will mean a protocol violation. The BEEP
session will be terminated without generating a response and it is
recommended that a diagnostic entry be logged.</t>

<t>The same applies to channel 0, in the case "reply-limit" was
activated. If a channel start or channel close request is issued but
no reply is received within the limit configured, will mean a protocol
violation and the BEEP session must be closed without generating a
response.</t>



</section>


</section>

<section title='Enabling no reply interactions: "no-reply"'>

<t>Problem presented in this section comes from the fact that a set
(or the last) MSG issued were not replied causing the channel or
session close to wait for ever until such reply is received.</t>

<t>The problem may be resolved, in some situations, by adding a new
BEEP frame type NFN, as proposed by David Kramer
(http://groups.google.com/group/beepwg/msg/3aeaaa624aea592c). That
would allow placing notifications, like MSG frame, but without
requiring a reply. However, this do not solve the problem on
escenarios where a request/response pattern is being implemented
(where an additional effort is required to correlate query and
responses).</t>

<t>The feature proposed "no-reply" will allow BEEP peers to notify
that they will support creating channel where replies to MSG frame
will be not required. This has the following main implications:</t>

<list style="numbers">
<t>BEEP peers will still be able to reply to MSG frames.</t>

<t>BEEP peers during close channel phase, for a channel with
"no-reply" activated, will no require replies to be up to date, that
is, replies to outstanding MSG and replies to received MSG frames.</t>
</list>

<t>The intention behind "no-reply" feature is:</t>
<list style="numbers">
<t>To provide a security feature that would protect BEEP servers that
must run profiles that perform server-to-client notifications. Because
the listener issues a MSG frame to the client, it must be replied to
close the session cleanly. This leaves great power to the client side
to harm the server.</t>

<t>To enhance BEEP interaction by providing a way to perform one-way
message notification, because no reply will be required to MSG frame
that is sent on a channel with "no-reply" activated.</t>
</list>

<section title='How applies "no-reply" feature to channel 0'>

<t>The "no-reply" feature can't be used for channel 0. </t>

</section>

<section title='Activating "no-reply" feature'>

<t>Once both BEEP peers have announced its support for "no-reply"
feature, at the greetings phase (<xref target="greetings_exchange"
/>), the feature is activated on channel start as follows:</t>

<artwork><![CDATA[
  I: MSG 0 1 . 78 130
  I: Content-Type: application/beep+xml
  I:
  I: <start number="1" no-reply="true">
  I:    <profile uri="urn:aspl.es:profiles:example"/>
  I: </start>
]]></artwork>

<t>If the remote BEEP peer accepts the channel to be created,
"no-reply" behaviour will be assumed for both parties. In the case
"no-reply" is not allowed for the profile requested, remote BEEP peer
must deny channel creation, replying: </t>

<artwork><![CDATA[
  L: ERR 0 1 . 136 129
  L: Content-Type: application/beep+xml
  L:
  L: <error code="554">Unable to provide resource requested with
     "no-reply" configured</error>
  L: END
]]></artwork>

</section>

</section>

<section title='How "no-reply" and "reply-limit" relate to each other?'>

<t>"no-reply" is a BEEP feature that provides security functions (being able
to close a channel without being blocked by pending replies) and application
protocol functions (allowing to perform one way message notifications). </t>

<t>This means that "no-reply" feature can be used in a trusted
environment withtout having security in mind but only creating an
application protocol that do not have to reply to each MSG received. </t>

<t>In the other hand "reply-limit" have the only intention to limit in
the time exchanges produced, especially over the channel 0, to limit
malicious usage. </t>

<t>"reply-limit" makes it possible to take the decision to close a
session if the remote BEEP do not reply within the negotiated
interval.</t>


</section>

<section title='Does "reply-limit" protected against permanent negative close?'>

<t>A kind of attack easy to setup is to always deny all channel (or
session) close requests received, making impossible to close a BEEP
session. </t>

<t>The easy countermeasure is to close the transport in the case a
BEEP peer insist in deny closing a session for some tries. </t>

<t>However this is not enough because without "reply-limit" feature, a
BEEP peer is allowed to not reply to a close request received. That
is, a bad BEEP peer simply have to not reply to a close request to
avoid closing its connection.</t>

<t>By using "reply-limit" feature, a BEEP is sure to receive a reply
within period negotiated, allowing to take a decision either because a
protocol violation due to time exceeded or because too much negative
replies received.</t>


</section>

</section>

</middle>


</rfc>
