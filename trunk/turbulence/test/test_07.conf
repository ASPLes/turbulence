<?xml version='1.0' ?><!-- great emacs, please load -*- nxml -*- mode -->
<!-- turbulence default configuration -->
<turbulence>

  <global-settings>
    <!-- port allocation configuration -->
    <ports>
      <port>44010</port>
    </ports>

    <!-- listener configuration (address to listen) -->
    <listener>
      <name>0.0.0.0</name>
    </listener>
    
    <!-- log reporting configuration -->
    <log-reporting enabled="no">
      <general-log file="/var/log/turbulence/main.log" />
      <error-log  file="/var/log/turbulence/error.log" />
      <access-log file="/var/log/turbulence/access.log" />
      <vortex-log file="/var/log/turbulence/vortex.log" />
    </log-reporting>

    <!-- building profiles support -->
    <tls-support enabled="yes" />

    <!-- crash settings 
       [*] hold:   lock the current instance so a developer can attach to the
                   process  to debug what's happening.

       [*] ignore: just ignore the signal, and try to keep running.

       [*] quit,exit: terminates turbulence execution.
     -->
    <on-bad-signal action="hold" />

    <!-- Configure the default turbulence behavior to start or stop
         if a configuration or module error is found. By default
         Turbulence will stop if a failure is found.
     -->
    <clean-start value="no" />

    <connections>
      <!-- Max allowed connections to handle at the same time. Getting
	   higher than 1024 will require especial permission. 

           Keep in mind that turbulence and vortex itself requires at
           least 12 descriptors for its proper function.  -->
      <max-connections hard-limit="512" soft-limit="512"/>
    </connections>

    <!-- in the case turbulence create child process to manage incoming connections, 
	 what to do with child process in turbulence main process exits. By default killing childs
	 will cause clean turbulence stop. However killing childs will cause running 
	 connections (handled by childs) to be closed. -->
    <kill-childs-on-exit value="yes" />
    
    <!-- in general, starting turbulence without having any profile
         registered, after loading all modules, etc, it is a bad
         configuration signal. However, under some dinamic
         circumstances it may be required. By default it is not allowed -->
    <allow-start-without-profiles value="yes" />

  </global-settings>

  <modules>
    
    <!-- directory where to find modules to load -->
<!--    <directory src="/etc/turbulence/mods-enabled" />  -->
    <!-- alternative directory -->
    <!-- <directory src="../mods-enabled" />  -->
    <no-load>
      <!-- signal modules to be not loaded even being available the
           directories configured. The name configured can be the name
           that is reporting the module or the module file name, like
           mod_skipped (don't add .so). The difference is that
           providing the file name will module from the loaded into
           memory while providing a name will cause the module to be
           loaded and then checked its name. -->
      <module name="mod-skipped" />
    </no-load>
  </modules>

  <!-- features to be requested and advised -->
  <features> 
    <!-- activates the x-client-close feature: improves server
         performance in high load -->
    <request-x-client-close value='yes' />
  </features>

  
  <!-- profile path configuration: the following is used to configure
       how profiles registered by modules are mixed to achieve the
       expected security policy and protocol orchestration -->
  <profile-path-configuration>
    <!-- allow all from all, without any limitation -->
    <!-- 
    <path-def server-name=".*" src=".*" path-name="free-for-all" > 
      <allow profile=".*" />
    </path-def>
     -->

    <!-- profile path for all connections coming from localhost -->
    <path-def server-name=".*" src="127.*" path-name="localhost">
      
      <if-success profile="http://iana.org/beep/SASL/.*" connmark="sasl:is:authenticated" >
	<allow profile="http://turbulence.ws/profiles/test1" preconnmark="sasl:is:authenticated"/>
	<if-success profile="http://iana.org/beep/TLS" >
	  <allow profile="http://iana.org/beep/xmlrpc" max-per-conn="1" />
	  <allow profile="http://fact.aspl.es/profiles/coyote_profile" />
	</if-success>
      </if-success>
    </path-def>

    
  </profile-path-configuration>

<!--  <on-demand-activation>
    <action selector="(first_channel_start (urn:aspl.es:beep:profiles:test)/a and connection_server_name (ss.aspl.es)/b) or 
		      defined_feature (x-session-share-activation)" do="load-module (mod-session-share)" />
  </on-demand-activation> -->
  
</turbulence>
